---
name: 'Container image'
on:
  push:
    branches:
      - main
      - dev
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PLATFORMS: linux/amd64,linux/arm/v7,linux/arm64
    services:
      registry:
        image: registry:2
        ports:
         - 5000:5000
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: ${{ env.PLATFORMS }}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          config-inline: |
            [worker.oci]
              max-parallelism = 4
          driver-opts: network=host
      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: Build candidate
        id: build_candidate
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: localhost:5000/golang-with-libgit2:latest
      - name: Inspect candidate
        run: |
          docker buildx imagetools inspect localhost:5000/golang-with-libgit2:latest
      - name: Test candidate
        id: test_candidate
        run: |
          IMG=localhost:5000/golang-with-libgit2 make test
